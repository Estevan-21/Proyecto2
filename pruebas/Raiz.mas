INPUT
Store a
//RAIZ: Saca la ra√≠z de lo que haya en x
		// division por 2
		Store x
		Load dos
		Store y
		JnS div
        Load count
	 	Store b
	 	// res^2
	 	Load b
		Store X
		Store Y
		JnS mult
        Load num
		Store c        
loop,	Load c
		Subt a
		Skipcond 800
		Jump loop2
		Load b
		Store x
		JnS div
		Load count
		Store b
		Store X
		Store Y
		JnS mult
        Load num
		Store c
        Load b      
		Jump loop
loop2,	Load c
		Subt a
		Skipcond 0
		Jump end
		Load b
		Add uno
		Store b
		Store b
		Store X
		Store Y
		JnS mult
        Load num
		Store c
		Jump loop2
		
// division
div,	DEC 0
		Clear
		Store count
dloop,	Load x
		Subt y
        Skipcond 400
        Jump con
        Add uno
con,	Skipcond 800
		JumpI div
		Store x
		Load count
		Add uno
		Store count
		Jump dloop
// multiplicacion
mult,	DEC 0
		Clear
		Store num
mloop,  Load num
        Add X
        Store num

        Load Y
        Skipcond 400
        Subt uno
        Store Y

        Skipcond 400 / have we completed the multiplication?
        Jump mloop / no; repeat loop
        JumpI mult

end,	Load b
		Subt uno
		OUTPUT
		Halt

a, 	DEC 0
b, 	DEC 0
c, 	DEC 0
dos,  	DEC 2
x, 	DEC 0
y, 	DEC 0
count, 	DEC 0
uno, 	DEC 1
X, 	DEC 0
Y, 	DEC 0
num, 	DEC 0